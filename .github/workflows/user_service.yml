name: CI/CD for User Service

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch
    paths:
      - 'backend/Microservices/Users/**'  # Trigger workflow when code in this path changes

  pull_request:
    branches:
      - main

  workflow_dispatch:



jobs:
  user-microservice:
    runs-on: ubuntu-latest

    env:
        VERSION: ${{ github.sha }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SESSION_SECRET: ${{ secrets.SESSION_SECRET }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install Dependencies
        working-directory: backend/Microservices/Users
        run: npm ci

      #- name: Run Tests
      #  working-directory: backend/Microservices/Users
      #  run: npm test  # Ensure you have test scripts in package.json


  docker-build-and-run:
    needs: user-microservice
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
         docker build -t user_service:latest -f backend/Microservices/Users/Dockerfile backend --no-cache

      - name: Run Docker Container Locally
        run: |
          docker run -d -p 3200:3200 --name user_service user_service:latest
  

 # deploy:
#    needs: docker-build-and-run
#    runs-on: ubuntu-latest
#
 #   steps:
  #    - name: SSH into Server and Deploy
   #     uses: appleboy/ssh-action@v0.1.10
    #    with:
     #     host: ${{ secrets.SERVER_HOST }}          # Server IP Address
      #    username: ${{ secrets.SERVER_USER }}      # Server SSH username
       #   password: ${{ secrets.SERVER_PASSWORD }}  # Server SSH password (or SSH key)
        #  script: |
         #   docker pull sodqv/user_service:latest
          #  docker stop user_service || true
           # docker rm user_service || true
            #docker run -d -p 3200:3200 --name user_service sodqv/user_service:latest



name: CI/CD for User Service

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch
    paths:
      - 'backend/Microservices/Users/**'  # Trigger workflow when code in this path changes

  pull_request:
    branches:
      - main

  workflow_dispatch:



env:
    VERSION: ${{ github.sha }}
    CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.CONTAINER_REGISTRY_LOGIN_SERVER }}
    CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
    CONTAINER_REGISTRY_PASSWORD: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

    DB_USERNAME: ${{ secrets.DB_USERNAME }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    SESSION_SECRET: ${{ secrets.SESSION_SECRET }}




jobs:
  user-microservice:
    runs-on: ubuntu-latest

    defaults:
      run: 
        working-directory: 'backend/Microservices/Users'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'

      - name: Install Dependencies
        working-directory: backend/Microservices/Users
        run: npm ci



  docker-build-and-run:
    needs: user-microservice
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4


      
      - name: Build Docker Image
        run: docker build -t ${CONTAINER_REGISTRY_LOGIN_SERVER}/user-microservice:latest -f backend/Microservices/Users/Dockerfile backend
      
      
      
      - name: Push Docker Image to Azure Container Registry
        working-directory: 'backend/Microservices/Users'
        run: |
          echo ${CONTAINER_REGISTRY_PASSWORD} | docker login ${CONTAINER_REGISTRY_LOGIN_SERVER} -u ${CONTAINER_REGISTRY_USERNAME} --password-stdin
          docker push ${CONTAINER_REGISTRY_LOGIN_SERVER}/user-microservice:latest



          
      - name: Install Kubectl
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.32.0


      - name: Deploy User Manifest to the AKS cluster (Azure Kubernetes Service)
        run: | 
          envsubst < backend/Microservices/Users/Kubernetes/userDeployment.yml > userDeployment.processed.yml
          kubectl apply -f userDeployment.processed.yml

    


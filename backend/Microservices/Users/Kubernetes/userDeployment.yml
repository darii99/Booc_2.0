apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-microservice
  namespace: default
  labels:
    app: user-microservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-microservice
  template:
    metadata:
      labels:
        app: user-microservice
    spec:
      containers:
      - name: user-microservice
        image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/user-microservice:latest
        env:
        - name: PORT
          value: "3200"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi 
---
apiVersion: v1
kind: Service
metadata:
  name: user-microservice
spec:
  type: LoadBalancer
  ports:
    - port: 3200
      targetPort: 3200
  selector:
    app: user-microservice
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: php-cpu-booc
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-microservice
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50 #If CPU usage exceeds 50%, system scales up, k8s adds more pods, and vice versa
    - type: Resource
      resource:
        name: memory
        target:
          type: AverageValue
          averageValue: 75Mi #Scale when average memory exceeds 75Mi
behavior:
    scaleDown:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 10
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
        - type: Percent
          value: 100
          periodSeconds: 10


